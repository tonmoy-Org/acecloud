'use client';

import { Container, Card, CardContent, CardMedia, Typography } from '@mui/material';
import React, { useState, useCallback, useMemo } from 'react';
import { motion } from 'framer-motion';
import { useRouter } from 'next/navigation';
import ApproachSection from '../SectionTitle/SectionTitle';

const staggerContainer = {
    hidden: { opacity: 0, y: 100 },
    show: {
        opacity: 1,
        y: 0,
        transition: {
            staggerChildren: 0.3,
            duration: 0.5,
        },
    },
};

const cardData = [
    {
        id: 'the-future-of-web-development-trends-to-watch-in-2025',
        title: 'The Future of Web Development: Trends to Watch in 2025',
        description: "In today’s competitive digital landscape, having a website is crucial for any business. However, simply having an online presence isn’t enough to stand out from the crowd. To truly maximize your website’s potential and ensure long-term success, you need a custom solution tailored to your specific business needs. Custom web development allows you to go beyond generic, off-the-shelf solutions, providing you with a website that is not only unique but also scalable, optimized for performance, and equipped to grow as your business does. </br> </br></br> Off-the-shelf website solutions like WordPress, Wix, and Squarespace are popular due to their convenience and ease of use. They allow you to get a website up and running quickly without much technical expertise. However, these platforms often come with inherent limitations that can stifle your website's potential in the long run. Pre-built templates and themes are designed with generic needs in mind, making it difficult to differentiate your brand.  </br> </br></br>This can result in a website that looks similar to thousands of others, making it hard to stand out and make an impression on your visitors.One of the biggest challenges with pre-built website solutions is the lack of customization. As your business grows, you may find that the rigid structures of these platforms don’t provide the flexibility you need to adapt. Whether you need to add more complex functionalities, handle increased traffic, or integrate third-party systems, these platforms can struggle to keep up. This is particularly true when you need to implement unique features that aren’t part of the default offerings of the website builder. Without the ability to fully customize your website, you’re left trying to fit your business needs into a limited framework, which can hinder your growth and performance.Additionally, off-the-shelf platforms often have limitations when it comes to search engine optimization (SEO). These websites tend to include unnecessary code and features that can slow down site performance, leading to poor loading speeds and negative impacts on your SEO rankings. </br> </br></br> The slow load times, along with limited control over metadata and site structure, can make it difficult to optimize your website for search engines. Poor SEO performance means your website may not rank as highly on search engine results pages, making it harder for potential customers to find you. In today’s competitive digital landscape, having a website is crucial for any business. However, simply having an online presence isn’t enough to stand out from the crowd. To truly maximize your website’s potential and ensure long-term success, you need a custom solution tailored to your specific business needs. Custom web development allows you to go beyond generic, off-the-shelf solutions, providing you with a website that is not only unique but also scalable, optimized for performance, and equipped to grow as your business does.Off- the - shelf website solutions like WordPress, Wix, and Squarespace are popular due to their convenience and ease of use. </br> </br></br>They allow you to get a website up and running quickly without much technical expertise.However, these platforms often come with inherent limitations that can stifle your website's potential in the long run. Pre-built templates and themes are designed with generic needs in mind, making it difficult to differentiate your brand. This can result in a website that looks similar to thousands of others, making it hard to stand out and make an impression on your visitors.One of the biggest challenges with pre - built website solutions is the lack of customization.As your business grows, you may find that the rigid structures of these platforms don’t provide the flexibility you need to adapt.Whether you need to add more complex functionalities, handle increased traffic, or integrate third - party systems, these platforms can struggle to keep up.This is particularly true when you need to implement unique features that aren’t part of the default offerings of the website builder.Without the ability to fully customize your website, you’re left trying to fit your business needs into a limited framework, which can hinder your growth and performance.</br> </br></br>Additionally, off - the - shelf platforms often have limitations when it comes to search engine optimization(SEO).These websites tend to include unnecessary code and features that can slow down site performance, leading to poor loading speeds and negative impacts on your SEO rankings.The slow load times, along with limited control over metadata and site structure, can make it difficult to optimize your website for search engines.Poor SEO performance means your website may not rank as highly on search engine results pages, making it harder for potential customers to find you.",
        shortDescription: 'Stay ahead in the digital landscape by learning about the latest trends in web development and design for 2025',
        image: '/blog/blog-1.webp'
    },
    {
        id: 'overcoming-limitations-of-pre-built-website-solutions',
        title: 'Overcoming Limitations of Pre-Built Website Solutions',
        description: "The world of web development is evolving at an unprecedented pace, and as we approach 2025, new trends are emerging that are set to redefine the industry. From innovative technologies to shifting user demands, web development is adapting to meet the challenges and opportunities of a rapidly changing digital landscape. To stay competitive and provide exceptional user experiences, businesses and developers must keep an eye on these upcoming trends. Here’s a glimpse into the future of web development and the key trends to watch in 2025. </br> </br></br> One of the most impactful trends shaping the future of web development is the growth of artificial intelligence (AI) and machine learning. While these technologies have been evolving for years, they are becoming increasingly integrated into web development workflows. AI-driven tools are streamlining tasks such as code generation, testing, content creation, and customer service through intelligent chatbots. By 2025, AI will be woven into every stage of web development, optimizing performance and creating highly personalized user experiences. For example, AI algorithms will enable hyper-personalized content based on user preferences, behaviors, and real-time data, leading to significantly higher engagement and conversion rates. </br> </br></br>  Another trend to watch is the rise of progressive web applications (PWAs). PWAs offer the best of both worlds, delivering the speed and feel of native mobile apps while remaining accessible through the web. Leveraging service workers, PWAs provide features like offline functionality, push notifications, and seamless updates, making them a powerful tool for enhancing mobile user experiences. As mobile internet usage continues to grow, PWAs will become essential by 2025, especially for businesses aiming to reach users on multiple devices without the cost of developing native apps. </br> </br></br> The adoption of WebAssembly (Wasm) is also set to play a pivotal role in the future of web development. WebAssembly, a binary format for executing code on the web at near-native speed, allows developers to create high-performance applications that were once limited to desktops. This opens doors for complex web applications, such as 3D modeling, video editing, and games, that demand intensive processing power. As more developers realize the potential of WebAssembly, it is expected to become a staple in web development by 2025, enabling more powerful and versatile web experiences. </br> </br></br>  Voice search and voice user interfaces (VUIs) are gaining traction, driven by the popularity of smart speakers and voice assistants like Alexa and Google Assistant. By 2025, voice-based interactions on the web will be commonplace, pushing developers to create interfaces that respond seamlessly to voice commands. This trend will encourage developers to focus on accessibility, natural language processing, and multimodal interactions, allowing users to navigate sites and complete tasks using voice alongside traditional methods. </br> </br></br> The shift toward a privacy-centric web is another major trend that will shape web development by 2025. As data privacy concerns continue to grow, developers will need to create websites that respect user privacy while maintaining personalization. Technologies like cookie-less tracking, server-side analytics, and zero-party data collection (where users voluntarily share information) will gain importance as businesses work to comply with regulations like GDPR and CCPA. Additionally, web developers will need to implement advanced encryption and security measures to combat increasingly sophisticated cyber threats. </br> </br></br> Low-code and no-code development platforms are also driving change, making web development more accessible. These platforms allow users with minimal coding knowledge to create websites and apps, democratizing web development. By 2025, low-code and no-code tools will become more sophisticated, enabling faster prototyping, testing, and deployment of digital products. While traditional coding remains essential for complex projects, these tools will empower small businesses and non-developers to create functional websites, lowering barriers to entry in web development. </br> </br></br> 3D and immersive experiences are also set to revolutionize web development by 2025, thanks to advancements in WebXR (a standard for virtual and augmented reality experiences on the web). As VR headsets and AR glasses become more affordable, websites will begin to incorporate 3D elements and interactive experiences to engage users on new levels. From virtual showrooms to interactive learning modules, immersive experiences will allow users to interact more deeply with content. Web developers will need to acquire skills in 3D modeling, animation, and spatial design to keep pace with this trend.</br> </br></br>  Finally, the Internet of Things (IoT) will continue to expand, prompting web development to adapt to a growing array of connected devices. By 2025, web applications will need to interact seamlessly with IoT devices, from smart home gadgets to industrial sensors. Developers will be challenged to create interfaces capable of handling real-time data streams and complex integrations, enabling users to monitor and control their devices directly through the web. </br> </br></br> These trends signal an exciting future for web development, one where new technologies and user-centric design will create even more immersive, personalized, and accessible digital experiences. Staying ahead of these trends will be essential for businesses and developers looking to remain competitive and deliver outstanding user experiences in 2025.",
        shortDescription: 'Discover the challenges of using pre-built solutions and how they impact your brand’s uniqueness.',
        image: '/blog/blog-5.webp'
    },
    {
        id: 'embracing-ai-in-web-development-transforming-the-digital-landscape',
        title: 'Embracing AI in Web Development: Transforming the Digital Landscape',
        description: "Artificial intelligence (AI) is no longer a distant dream; it has become an integral part of modern web development. From streamlining development workflows to enhancing user experiences, AI is revolutionizing the way websites are built and maintained. By 2025, AI will be deeply embedded in the web development process, enabling developers to achieve greater efficiency and personalization. One of the most significant advantages of AI is its ability to automate repetitive tasks. Developers often spend hours debugging code, optimizing performance, or generating content.</br> </br></br> AI-driven tools like GitHub Copilot and AI-powered content generators are eliminating these time-consuming tasks, allowing developers to focus on more strategic elements of web development. AI can analyze codebases, detect inefficiencies, and even recommend solutions in real-time, significantly reducing the development cycle. AI is also transforming how websites interact with users. Intelligent chatbots powered by natural language processing (NLP) are becoming the standard for customer service. These chatbots can understand user intent, respond accurately, and even provide personalized recommendations based on user behavior. </br> </br></br> By integrating AI-driven chatbots into websites, businesses can offer 24/7 support, enhance customer satisfaction, and reduce operational costs. Personalization is another area where AI shines. Users expect tailored experiences when they visit a website. AI algorithms can analyze user behavior, preferences, and historical data to deliver hyper-personalized content. Whether it’s recommending products, suggesting blog posts, or adapting the website layout to individual preferences, AI enables businesses to engage users effectively and boost conversions. </br> </br></br> AI is also instrumental in improving website accessibility. By analyzing content and user interactions, AI tools can identify accessibility issues and suggest fixes. For example, AI can detect images without alt text, assess color contrast, or provide recommendations for making navigation more user-friendly for people with disabilities. These advancements are making the web more inclusive for all users. Security is another critical area where AI is making a difference. Cyberattacks are becoming increasingly sophisticated, and traditional security measures often fall short. AI-powered security tools can monitor website activity in real-time, identify suspicious patterns, and take proactive measures to prevent breaches. </br> </br></br> Machine learning algorithms can predict potential threats based on historical data, enabling businesses to stay ahead of cybercriminals. As the demand for AI integration grows, developers will need to acquire new skills and adapt to AI-driven workflows. Understanding AI algorithms, data analysis, and machine learning will become essential for web developers in the coming years. Additionally, ethical considerations around AI, such as data privacy and algorithm bias, will require developers to adopt responsible practices. Despite its transformative potential, AI in web development comes with challenges. Implementing AI solutions can be resource-intensive, requiring significant investment in infrastructure and expertise. </br> </br></br> Businesses must carefully evaluate their needs and capabilities before adopting AI-driven tools. In conclusion, AI is reshaping the future of web development, offering unprecedented opportunities for automation, personalization, and security. By leveraging AI technologies, developers can create websites that are not only efficient but also deliver exceptional user experiences. As we move towards 2025, embracing AI will be crucial for businesses looking to stay competitive in the digital landscape.",
        shortDescription: 'Explore how AI is transforming web development through automation, personalization, and security.',
        image: '/blog/blog-3.webp',
    },
    {
        id: 'enhancing-user-experiences-with-progressive-web-apps-pwas',
        title: 'Enhancing User Experiences with Progressive Web Apps (PWAs)',
        description: "Progressive Web Apps (PWAs) represent a significant evolution in web technology, offering the best of both web and mobile applications. As internet usage on mobile devices continues to grow, PWAs are emerging as a vital solution for businesses aiming to provide seamless and engaging user experiences. By 2025, PWAs will be at the forefront of web development, transforming how users interact with websites. At their core, PWAs combine the accessibility of websites with the performance and functionality of native mobile apps. </br> </br></br> They use service workers and modern web APIs to deliver offline capabilities, push notifications, and smooth updates. Unlike traditional websites, PWAs allow users to access content even without an internet connection, enhancing reliability and convenience. This offline functionality is particularly beneficial for businesses in regions with inconsistent internet connectivity. One of the standout features of PWAs is their ability to deliver a native app-like experience without requiring downloads from app stores. Users can add PWAs directly to their home screens, enabling instant access to the application. This eliminates barriers such as storage limitations and app store approval processes, making PWAs a cost-effective alternative to native apps. Speed is another critical advantage of PWAs. Built with performance optimization in mind, PWAs load quickly and respond seamlessly to user interactions. </br> </br></br> Faster load times reduce bounce rates and improve user engagement, leading to higher customer satisfaction and retention. Additionally, PWAs support responsive design, ensuring a consistent experience across devices and screen sizes. Push notifications are a powerful tool that PWAs leverage to drive user engagement. These notifications allow businesses to re-engage users with timely updates, promotions, and personalized messages. </br> </br></br> For instance, an e-commerce website can notify users about flash sales or abandoned carts, prompting them to take action and increasing conversion rates. Security is a top priority for PWAs. Since they are served over HTTPS, PWAs ensure secure connections, protecting user data and preventing unauthorized access. This focus on security is essential in building trust with users, especially when handling sensitive information like payment details. While PWAs offer numerous benefits, implementing them requires careful planning and expertise. Businesses must ensure that their PWAs meet performance benchmarks, adhere to accessibility standards, and provide a seamless user experience. </br> </br></br> Developers need to be proficient in modern web technologies, including service workers, Web App Manifests, and caching strategies. As the adoption of PWAs continues to rise, they are expected to become the standard for mobile web experiences. Industries such as e-commerce, media, and travel are already leveraging PWAs to enhance their digital presence and reach wider audiences. </br> </br></br> For example, companies like Starbucks and Twitter have successfully implemented PWAs, achieving significant improvements in user engagement and performance. In conclusion, Progressive Web Apps are revolutionizing web development by bridging the gap between websites and native apps. Their ability to deliver fast, reliable, and engaging experiences makes them a valuable asset for businesses in the digital age. As we approach 2025, embracing PWAs will be crucial for staying ahead in the competitive web landscape.",
        shortDescription: 'Learn how PWAs are reshaping web experiences by offering the best of both web and mobile apps.',
        image: '/blog/blog-4.webp',
    },
    {
        id: "web3-and-decentralized-web-development-challenges-and-opportunities",
        title: "Web3 and Decentralized Web Development: Challenges and Opportunities",
        description: "The internet has undergone significant transformations since its inception, progressing through Web 1.0 (static content), Web 2.0 (interactive and social web), and now moving toward Web3—a decentralized, user-centric web powered by blockchain technology and smart contracts. This new paradigm aims to empower users by shifting control from centralized authorities to decentralized networks, promising enhanced privacy, transparency, and security. However, Web3 also introduces a unique set of challenges that developers must navigate to unlock its full potential.<br><br><br>Understanding Web3: A Decentralized Framework<br>Web3 leverages blockchain technology to create decentralized applications (dApps) and services. Unlike traditional applications hosted on centralized servers, dApps operate on peer-to-peer networks, enabling trustless interactions between users. Core technologies driving Web3 include:<br><br>- Blockchain: A distributed ledger system that records transactions securely and transparently.<br><br>- Smart Contracts: Self-executing contracts with predefined rules, eliminating the need for intermediaries.<br>- Cryptocurrencies: Digital assets that power Web3 ecosystems and enable value exchange.<br><br><br>Opportunities in Web3 Development<br><br>1. Data Ownership and Privacy: Web3 empowers users to control their data through decentralized identity systems. This shift addresses privacy concerns associated with centralized platforms, where user data is often monetized without consent.<br>2. New Revenue Models: Web3 introduces innovative monetization opportunities, such as tokenization and non-fungible tokens (NFTs). Creators can directly earn revenue from their work without relying on intermediaries.<br>3. Global Accessibility: Decentralized networks eliminate geographical restrictions, enabling anyone with internet access to participate in Web3 ecosystems. This inclusivity fosters financial inclusion and democratizes access to digital resources.<br>4. Enhanced Security: Blockchain's immutability and transparency reduce vulnerabilities to fraud and cyberattacks. Smart contracts ensure tamper-proof execution of agreements, enhancing trust between parties.<br><br><br>Challenges in Web3 Development<br>1. Scalability: One of the most significant hurdles is scalability. Blockchain networks often face limitations in transaction throughput, leading to slower processing times and higher costs. Solutions like layer-2 protocols and sharding aim to address these issues.<br>2. Complexity: Developing dApps requires specialized skills in blockchain programming, smart contracts, and cryptographic techniques. The steep learning curve can be a barrier for traditional web developers.<br>3. User Experience: Web3 applications often suffer from poor usability, with complex interfaces and cumbersome onboarding processes. Simplifying user experiences is critical to driving adoption.<br>4. Regulatory Uncertainty: The legal and regulatory landscape for Web3 remains unclear in many jurisdictions. Developers must navigate compliance challenges while building decentralized solutions.<br><br><br>Best Practices for Web3 Development<br>1. Leverage Developer Tools: Tools like Truffle, Hardhat, and Remix simplify the development of smart contracts and dApps. Frameworks like Web3.js and Ethers.js facilitate blockchain integration into web applications.<br>2. Focus on Security: Security is paramount in Web3 development. Regular code audits, secure coding practices, and bug bounty programs help mitigate vulnerabilities.<br>3. Prioritize User Education: Educating users about wallet management, private key security, and blockchain concepts is essential for ensuring safe participation in Web3 ecosystems.<br>4. Adopt Scalable Solutions: Incorporating layer-2 technologies and optimizing smart contract design can enhance scalability and reduce transaction costs.<br><br><br>The Future of Web3<br>As Web3 matures, it will likely intersect with emerging technologies such as AI, IoT, and AR/VR, creating new opportunities for innovation. Decentralized autonomous organizations (DAOs) will redefine governance models, while advancements in interoperability will enable seamless integration across blockchain networks.<br><br><br>In conclusion, Web3 represents a transformative shift in web development, offering unparalleled opportunities for decentralization and user empowerment. By addressing its challenges and adopting best practices, developers can lead the charge in building a more equitable and resilient internet for the future.",
        shortDescription: "Explore the transformative impact of Web3 on web development, including challenges, opportunities, and best practices.",
        image: "/blog/blog-6.webp"
    },
    {
        id: "the-rise-of-ai-powered-web-development-redefining-the-digital-experience",
        title: "The Rise of AI-Powered Web Development: Redefining the Digital Experience",
        description: "Artificial intelligence (AI) has emerged as a transformative force in web development, fundamentally changing how websites and applications are designed, developed, and managed. By integrating AI technologies, developers can automate complex tasks, enhance user experiences, and create adaptive, personalized interactions. The rise of AI-powered web development is not just a trend—it’s shaping the future of the digital landscape.<br><br><br> AI in Web Development: A Brief Overview<br>AI-powered web development leverages machine learning (ML), natural language processing (NLP), and computer vision to optimize processes and improve website functionality. These technologies enable websites to understand, predict, and respond to user needs dynamically. AI tools now support every stage of development, from design and coding to maintenance and user engagement.<br><br> Key Applications of AI in Web Development<br>1. AI-Assisted Coding: AI tools like GitHub Copilot and DeepCode assist developers by suggesting code snippets, identifying bugs, and providing real-time optimizations. These tools significantly reduce coding time and improve code quality.<br>2. Personalized User Experiences: AI algorithms analyze user behavior to deliver personalized recommendations, content, and layouts. For example, e-commerce websites use AI to suggest products based on browsing history and preferences.<br>3. Voice and Chat Interfaces: NLP-powered chatbots and voice assistants enhance customer service by providing instant support and resolving user queries. These tools improve accessibility and streamline communication.<br>4. Automated Testing: AI-driven testing tools, such as Testim and Applitools, automate the testing process, identifying issues more efficiently than manual methods. These tools adapt to changes in code and provide robust quality assurance.<br>5. AI-Enhanced SEO: AI tools optimize content and technical aspects of a website for search engines. By analyzing trends and keywords, they improve rankings and ensure that content reaches the target audience.<br><br> Advantages of AI-Powered Web Development<br>1. Efficiency and Productivity: AI automates repetitive tasks, allowing developers to focus on strategic and creative aspects of web development. This results in faster project completion and higher-quality outcomes.<br>2. Cost-Effectiveness: By reducing the need for extensive manual coding and testing, AI lowers development costs and resource allocation.<br>3. Improved User Engagement: AI’s ability to analyze user data and deliver personalized experiences increases user satisfaction and retention.<br>4. Predictive Analytics: AI-powered analytics tools anticipate user behavior, helping businesses make data-driven decisions to optimize their websites.<br><br> Challenges of AI Integration<br>1. Complexity and Learning Curve: Implementing AI requires expertise in data science and ML algorithms, which may be challenging for traditional web developers.<br>2. Data Privacy Concerns: AI relies heavily on user data for personalization, raising concerns about data security and privacy. Compliance with regulations like GDPR is essential.<br>3. High Initial Investment: Developing and integrating AI systems can be expensive, especially for small businesses. The cost of AI infrastructure and expertise can be a barrier.<br>4. Over-Reliance on Automation: While AI enhances productivity, over-reliance on automated tools can lead to a lack of creativity and human oversight.<br><br> Tools and Platforms for AI-Powered Web Development<br>1. TensorFlow.js: Enables the use of machine learning models directly in the browser, enhancing interactivity and performance.<br>2. Adobe Sensei: A suite of AI-powered tools for automating design tasks, optimizing media assets, and enhancing content delivery.<br>3. Dialogflow: A platform for building conversational interfaces, including chatbots and voice applications.<br>4. Wix ADI (Artificial Design Intelligence): Allows users to create fully functional websites with minimal effort, using AI to suggest layouts, designs, and content.<br><br> Best Practices for Leveraging AI<br>1. Define Clear Objectives: Understand your project’s goals and identify where AI can add value, whether it’s automating tasks, enhancing user experiences, or optimizing processes.<br>2. Focus on Data Quality: High-quality, well-organized data is critical for AI effectiveness. Ensure that your data sources are clean, reliable, and compliant with privacy laws.<br>3. Combine AI with Human Expertise: While AI can automate tasks, human oversight ensures creativity, ethical considerations, and quality control.<br>4. Start Small: Begin with manageable AI applications, such as chatbots or recommendation systems, before scaling up to more complex implementations.<br><br> The Future of AI in Web Development<br>As AI technologies advance, their role in web development will continue to expand. Emerging trends include:<br>- AI-Generated Code: Tools capable of autonomously writing entire codebases will become more sophisticated, enabling rapid development cycles.<br>- Adaptive Websites: AI will create websites that evolve in real-time, adapting layouts and functionality based on user behavior and context.<br>- Augmented Reality (AR) Integration: AI will play a crucial role in integrating AR into web experiences, enabling immersive interactions and visualizations.<br>- Ethical AI Practices: As AI adoption grows, ethical considerations, including bias reduction and transparency, will become central to AI-powered development.<br><br>In conclusion, AI-powered web development is transforming the industry by enabling smarter, faster, and more personalized digital experiences. By addressing its challenges and adopting best practices, developers can harness AI’s full potential to shape the future of the web.",
        shortDescription: "Explore how AI technologies are revolutionizing web development, offering automation, personalization, and adaptive experiences.",
        image: "/blog/blog-7.webp"
    }



];


const staggerItem = {
    hidden: { opacity: 0, y: 100 },
    show: { opacity: 1, y: 0, transition: { duration: 0.5, ease: 'easeOut' } },
};

const MoreBlog: React.FC = () => {
    const [hoveredCard, setHoveredCard] = useState<number | null>(null);
    const [glowPosition, setGlowPosition] = useState<{ x: string; y: string }>({ x: '50%', y: '50%' });
    const router = useRouter();

    const handleMouseMove = useCallback(
        (e: React.MouseEvent) => {
            const { clientX, clientY, currentTarget } = e;
            const { left, top } = currentTarget.getBoundingClientRect();
            setGlowPosition({ x: `${clientX - left}px`, y: `${clientY - top}px` });
        },
        []
    );

    const handleMouseEnter = (index: number) => {
        setHoveredCard(index);
    };

    const handleMouseLeave = () => {
        setHoveredCard(null);
    };

    const handleCardClick = (id: string) => {
        router.push(`/blogs/${id}`);
    };




    return (
        <Container sx={{ pt: 10, pb: 20 }}>
            <ApproachSection
                header=""
                title="Check Out Some More Blogs"
                description=""
            />
            <motion.div
                variants={staggerContainer}
                initial="hidden"
                animate="show"
                style={{ display: 'flex', flexWrap: 'wrap', gap: '20px', justifyContent: 'center' }}
            >
                {cardData.map((card, index) => {
                    const isHovered = hoveredCard === index;
                    const glowStyle = useMemo(
                        () => ({
                            background: `radial-gradient(300px at ${glowPosition.x} ${glowPosition.y}, ${isHovered ? 'rgba(168, 85, 247, 0.2)' : 'rgba(168, 85, 247, 0)'}, transparent 60%)`,
                            transition: 'background 0.3s ease-out',
                        }),
                        [glowPosition, isHovered]
                    );

                    return (
                        <motion.div
                            key={card.id}
                            variants={staggerItem}
                            onMouseMove={handleMouseMove}
                            onMouseEnter={() => handleMouseEnter(index)}
                            onMouseLeave={handleMouseLeave}
                            onClick={() => handleCardClick(card.id)} // Redirect to details page
                            style={{ cursor: 'pointer' }}
                        >
                            <Card
                                sx={{
                                    width: 350,
                                    height: '100%',
                                    position: 'relative',
                                    color: 'white', // Set text color to white
                                    ...glowStyle,
                                    backgroundColor: 'hsl(0, 0%, 3.9%)',
                                    padding: 1
                                }}
                                style={{ border: '1px solid rgba(225, 225, 225, 0.1)' }}
                            >
                                <CardMedia
                                    component="img"
                                    height="140"
                                    image={card.image}
                                    alt={card.title}
                                    sx={{ padding: 2, height: 220, width: '100%' }}
                                />
                                <CardContent>
                                    <Typography sx={{ color: 'white', fontSize: 18, fontWeight: 600 }}>
                                        {card.title}
                                    </Typography>
                                    <Typography variant="body2" sx={{ color: 'hsl(220 10% 54.4%)', mt: 1 }}>
                                        {card.shortDescription}
                                    </Typography>
                                </CardContent>
                            </Card>
                        </motion.div>
                    );
                })}
            </motion.div>
        </Container>
    );
};

export default MoreBlog;
